[{"path":"https://avishekb9.github.io/WaveQTE/CLAUDE.html","id":null,"dir":"","previous_headings":"","what":"CLAUDE.md","title":"CLAUDE.md","text":"file provides guidance Claude Code (claude.ai/code) working code repository.","code":""},{"path":"https://avishekb9.github.io/WaveQTE/CLAUDE.html","id":"project-overview","dir":"","previous_headings":"","what":"Project Overview","title":"CLAUDE.md","text":"WaveQTE R package implementing Wavelet-based Quantile Transfer Entropy analysis financial time series. analyzes market interconnectedness, financial contagion, risk spillover effects across different time scales market conditions.","code":""},{"path":[]},{"path":"https://avishekb9.github.io/WaveQTE/CLAUDE.html","id":"package-development","dir":"","previous_headings":"Development Commands","what":"Package Development","title":"CLAUDE.md","text":"","code":"# Install dependencies devtools::install_deps()  # Document functions (generates man files from roxygen2 comments) devtools::document()  # Run tests devtools::test()  # Check package integrity devtools::check()  # Install package locally devtools::install()  # Build package devtools::build()"},{"path":"https://avishekb9.github.io/WaveQTE/CLAUDE.html","id":"testing","dir":"","previous_headings":"Development Commands","what":"Testing","title":"CLAUDE.md","text":"Tests located tests/testthat/ Main test files: test-qte.R, test-wavelet.R, test-network.R Run specific test: testthat::test_file(\"tests/testthat/test-qte.R\")","code":""},{"path":"https://avishekb9.github.io/WaveQTE/CLAUDE.html","id":"documentation","dir":"","previous_headings":"Development Commands","what":"Documentation","title":"CLAUDE.md","text":"Generate documentation: devtools::document() Build vignettes: devtools::build_vignettes() View package help: ?WaveQTE-package","code":""},{"path":[]},{"path":"https://avishekb9.github.io/WaveQTE/CLAUDE.html","id":"core-module-structure","dir":"","previous_headings":"Architecture","what":"Core Module Structure","title":"CLAUDE.md","text":"data_preparation.R: Data import, processing, return calculations wavelet_decomposition.R: MODWT-based wavelet analysis across time scales quantile_transfer_entropy.R: QTE calculations multiscale analysis network_analysis.R: QTE-based network construction metrics contagion_analysis.R: Financial contagion detection crisis analysis visualization.R: Network plots, heatmaps, time series visualization utils.R: Utility functions error handling","code":""},{"path":"https://avishekb9.github.io/WaveQTE/CLAUDE.html","id":"data-flow-architecture","dir":"","previous_headings":"Architecture","what":"Data Flow Architecture","title":"CLAUDE.md","text":"Data Ingestion: Multiple sources (built-dataset, Yahoo Finance, CSV) Preprocessing: Return calculation, quality checks, summary statistics Wavelet Decomposition: MODWT decomposition across multiple scales QTE Analysis: Calculate transfer entropy different quantile levels Network Construction: Build networks QTE matrices Visualization: Generate plots analysis outputs","code":""},{"path":"https://avishekb9.github.io/WaveQTE/CLAUDE.html","id":"key-dependencies","dir":"","previous_headings":"Architecture","what":"Key Dependencies","title":"CLAUDE.md","text":"waveslim: Wavelet decomposition (MODWT) quantreg: Quantile regression QTE calculations igraph: Network analysis visualization quantmod: Financial data retrieval ggplot2: Visualization framework","code":""},{"path":[]},{"path":"https://avishekb9.github.io/WaveQTE/CLAUDE.html","id":"data-functions","dir":"","previous_headings":"Function Organization","what":"Data Functions","title":"CLAUDE.md","text":"get_stock_data(): Multi-source data retrieval (built-, Yahoo Finance, custom) process_returns(): Calculate clean return series calculate_summary_stats(): Descriptive statistics","code":""},{"path":"https://avishekb9.github.io/WaveQTE/CLAUDE.html","id":"core-analysis-functions","dir":"","previous_headings":"Function Organization","what":"Core Analysis Functions","title":"CLAUDE.md","text":"wavelet_decompose(): Primary wavelet decomposition calculate_qte(): Single-scale QTE calculation calculate_multiscale_qte(): QTE across wavelet scales create_qte_network(): Network construction QTE values","code":""},{"path":"https://avishekb9.github.io/WaveQTE/CLAUDE.html","id":"visualization-functions","dir":"","previous_headings":"Function Organization","what":"Visualization Functions","title":"CLAUDE.md","text":"plot_enhanced_network(): Network visualization customization plot_qte_heatmap(): QTE matrix visualization plot_rolling_qte(): Time-varying QTE analysis","code":""},{"path":"https://avishekb9.github.io/WaveQTE/CLAUDE.html","id":"testing-strategy","dir":"","previous_headings":"","what":"Testing Strategy","title":"CLAUDE.md","text":"Tests follow pattern: arrange data → act (run function) → assert results - Use set.seed() reproducible random data - Test edge cases (short series, invalid parameters) - Validate return types error handling - Test statistical properties applicable","code":""},{"path":"https://avishekb9.github.io/WaveQTE/CLAUDE.html","id":"code-style","dir":"","previous_headings":"","what":"Code Style","title":"CLAUDE.md","text":"Use roxygen2 documentation exported functions Include examples function documentation Use 2-space indentation (defined .Rproj) Follow R naming conventions (snake_case functions) Add input validation meaningful error messages","code":""},{"path":"https://avishekb9.github.io/WaveQTE/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to WaveQTE","title":"Contributing to WaveQTE","text":"Thank interest contributing WaveQTE! document provides guidelines instructions contributing.","code":""},{"path":"https://avishekb9.github.io/WaveQTE/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to WaveQTE","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://avishekb9.github.io/WaveQTE/CONTRIBUTING.html","id":"how-to-contribute","dir":"","previous_headings":"","what":"How to Contribute","title":"Contributing to WaveQTE","text":"Fork repository Create new branch feature Make changes Run tests checks Submit pull request","code":""},{"path":"https://avishekb9.github.io/WaveQTE/CONTRIBUTING.html","id":"development-setup","dir":"","previous_headings":"","what":"Development Setup","title":"Contributing to WaveQTE","text":"Install R (>= 3.5.0) Install required packages: Clone fork: Install package dependencies:","code":"install.packages(c(\"devtools\", \"roxygen2\", \"testthat\")) git clone https://github.com/your-username/WaveQTE.git devtools::install_deps()"},{"path":"https://avishekb9.github.io/WaveQTE/CONTRIBUTING.html","id":"code-guidelines","dir":"","previous_headings":"","what":"Code Guidelines","title":"Contributing to WaveQTE","text":"Follow existing code style Add roxygen2 documentation new functions Include examples function documentation Add unit tests new functionality Use meaningful variable names Add error handling appropriate","code":""},{"path":"https://avishekb9.github.io/WaveQTE/CONTRIBUTING.html","id":"testing","dir":"","previous_headings":"","what":"Testing","title":"Contributing to WaveQTE","text":"submitting pull request:","code":"devtools::document() devtools::test() devtools::check()"},{"path":"https://avishekb9.github.io/WaveQTE/CONTRIBUTING.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Contributing to WaveQTE","text":"Update relevant documentation files Add/update function documentation Update vignettes needed Update NEWS.md user-visible changes","code":""},{"path":"https://avishekb9.github.io/WaveQTE/CONTRIBUTING.html","id":"submitting-changes","dir":"","previous_headings":"","what":"Submitting Changes","title":"Contributing to WaveQTE","text":"Push changes fork Submit pull request Describe changes Reference relevant issues","code":""},{"path":"https://avishekb9.github.io/WaveQTE/CONTRIBUTING.html","id":"questions","dir":"","previous_headings":"","what":"Questions?","title":"Contributing to WaveQTE","text":"Feel free open issue questions suggestions.","code":""},{"path":"https://avishekb9.github.io/WaveQTE/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 WaveQTE authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://avishekb9.github.io/WaveQTE/articles/advanced-features.html","id":"different-wavelet-filters","dir":"Articles","previous_headings":"Advanced Wavelet Analysis","what":"Different Wavelet Filters","title":"Advanced Features in WaveQTE","text":"","code":"library(WaveQTE)  # Get data data <- get_stock_data(\"AAPL\", \"2019-01-01\", \"2023-12-31\")  # Compare different wavelet filters filters <- c(\"la8\", \"d4\", \"c6\") wave_results <- lapply(filters, function(wf) {   wavelet_decompose(data[,1], wf = wf) })  # Compare variance decompositions var_results <- lapply(wave_results, analyze_wavelet_variance)  # Print results for(i in seq_along(filters)) {   cat(\"\\nFilter:\", filters[i], \"\\n\")   print(var_results[[i]]$percentage) }"},{"path":"https://avishekb9.github.io/WaveQTE/articles/advanced-features.html","id":"bootstrap-analysis","dir":"Articles","previous_headings":"Advanced Wavelet Analysis","what":"Bootstrap Analysis","title":"Advanced Features in WaveQTE","text":"","code":"# Perform bootstrap analysis x <- as.numeric(data[,1]) y <- lag(x, 1)  # Create lagged series  boot_results <- bootstrap_qte(   x, y,   tau = 0.5,   B = 1000,   block_size = 20 )  # Analyze results hist(boot_results$boot_samples,      main = \"Bootstrap Distribution of QTE\",      breaks = 50)  cat(\"95% Confidence Interval:\",      paste(round(boot_results$ci, 4), collapse = \" to \"))"},{"path":[]},{"path":"https://avishekb9.github.io/WaveQTE/articles/advanced-features.html","id":"community-detection","dir":"Articles","previous_headings":"Network Analysis Options","what":"Community Detection","title":"Advanced Features in WaveQTE","text":"","code":"# Create network net <- create_qte_network(data, wave_results, scale = 1) metrics <- calculate_network_metrics(net)  # Analyze communities communities <- metrics$communities print(communities)  # Plot with community structure plot_enhanced_network(net, scale = 1, tau = 0.5) +   aes(color = factor(membership(communities)))"},{"path":"https://avishekb9.github.io/WaveQTE/articles/advanced-features.html","id":"network-dynamics","dir":"Articles","previous_headings":"Network Analysis Options","what":"Network Dynamics","title":"Advanced Features in WaveQTE","text":"","code":"# Calculate time-varying networks window_size <- 252 n_windows <- nrow(data) - window_size + 1  network_evolution <- lapply(1:n_windows, function(i) {   window_data <- data[i:(i+window_size-1),]   window_wave <- lapply(1:ncol(window_data), function(j) {     wavelet_decompose(window_data[,j])   })   create_qte_network(window_data, window_wave, scale = 1) })  # Analyze network metrics over time density_evolution <- sapply(network_evolution, function(net) {   calculate_network_metrics(net)$density })  plot(density_evolution, type = \"l\",      main = \"Network Density Evolution\",      xlab = \"Time\", ylab = \"Density\")"},{"path":[]},{"path":"https://avishekb9.github.io/WaveQTE/articles/advanced-features.html","id":"enhanced-network-plots","dir":"Articles","previous_headings":"Customizing Visualizations","what":"Enhanced Network Plots","title":"Advanced Features in WaveQTE","text":"","code":"# Create custom network visualization plot_enhanced_network(net, scale = 1, tau = 0.5) +   theme_minimal() +   scale_color_brewer(palette = \"Set3\") +   ggtitle(\"Custom Network Visualization\") +   theme(     plot.title = element_text(hjust = 0.5, size = 14),     legend.position = \"bottom\"   )"},{"path":"https://avishekb9.github.io/WaveQTE/articles/advanced-features.html","id":"custom-heatmaps","dir":"Articles","previous_headings":"Customizing Visualizations","what":"Custom Heatmaps","title":"Advanced Features in WaveQTE","text":"","code":"# Calculate QTE matrix qte_results <- calculate_multiscale_qte(   wave_results[[1]],    wave_results[[2]],    tau_levels = seq(0.1, 0.9, by = 0.1) )  # Create custom heatmap plot_qte_heatmap(qte_results) +   scale_fill_viridis_c(option = \"magma\") +   theme_minimal() +   theme(     axis.text.x = element_text(angle = 45, hjust = 1),     plot.title = element_text(hjust = 0.5, size = 14)   )"},{"path":[]},{"path":"https://avishekb9.github.io/WaveQTE/articles/advanced-features.html","id":"optimal-wavelet-level-selection","dir":"Articles","previous_headings":"Advanced Parameter Settings","what":"Optimal Wavelet Level Selection","title":"Advanced Features in WaveQTE","text":"","code":"# Function to evaluate decomposition levels evaluate_levels <- function(data, max_level = 8) {   results <- lapply(1:max_level, function(level) {     wave <- wavelet_decompose(data, n.levels = level)     var_analysis <- analyze_wavelet_variance(wave)     list(       level = level,       variance = var_analysis$variance,       percentage = var_analysis$percentage     )   })      # Find optimal level based on variance explained   var_explained <- sapply(results, function(r) {     sum(unlist(r$percentage[1:length(r$percentage)-1]))   })      optimal_level <- which.max(diff(var_explained))   return(list(     optimal_level = optimal_level,     var_explained = var_explained   )) }  # Apply to data level_analysis <- evaluate_levels(as.numeric(data[,1])) cat(\"Optimal decomposition level:\", level_analysis$optimal_level)"},{"path":[]},{"path":"https://avishekb9.github.io/WaveQTE/articles/advanced-features.html","id":"parallel-processing","dir":"Articles","previous_headings":"Performance Optimization","what":"Parallel Processing","title":"Advanced Features in WaveQTE","text":"","code":"library(parallel) library(doParallel)  # Setup parallel backend n_cores <- detectCores() - 1 cl <- makeCluster(n_cores) registerDoParallel(cl)  # Parallel QTE calculation parallel_qte <- function(returns, wave_decomp, tau_levels) {   foreach(tau = tau_levels, .combine = rbind) %dopar% {     sapply(1:length(wave_decomp[[1]]$details), function(scale) {       calculate_qte(         wave_decomp[[1]]$details[[scale]],         wave_decomp[[2]]$details[[scale]],         tau = tau       )     })   } }  # Use parallel implementation system.time({   results_parallel <- parallel_qte(     data,     wave_results,     seq(0.1, 0.9, by = 0.1)   ) })  stopCluster(cl)"},{"path":"https://avishekb9.github.io/WaveQTE/articles/basic-usage.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started with WaveQTE","text":"WaveQTE package implements Wavelet-based Quantile Transfer Entropy analysis financial time series. vignette demonstrates basic usage package.","code":""},{"path":"https://avishekb9.github.io/WaveQTE/articles/basic-usage.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting Started with WaveQTE","text":"","code":"# install.packages(\"devtools\") devtools::install_github(\"avishekb9/WaveQTE\") library(WaveQTE)"},{"path":"https://avishekb9.github.io/WaveQTE/articles/basic-usage.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data Preparation","title":"Getting Started with WaveQTE","text":"First, let’s get financial data:","code":"# Define symbols and date range symbols <- c(\"AAPL\", \"MSFT\", \"JPM\") start_date <- \"2019-01-01\" end_date <- \"2023-12-31\"  # Get data returns <- get_stock_data(symbols, start_date, end_date)  # Process returns returns <- process_returns(returns)  # Calculate summary statistics stats <- calculate_summary_stats(returns) print_summary_stats(stats)"},{"path":"https://avishekb9.github.io/WaveQTE/articles/basic-usage.html","id":"wavelet-decomposition","dir":"Articles","previous_headings":"","what":"Wavelet Decomposition","title":"Getting Started with WaveQTE","text":"Perform wavelet decomposition return series:","code":"# Decompose each series wave_decomp <- lapply(1:ncol(returns), function(i) {   wavelet_decompose(returns[,i]) })  # Analyze variance contributions var_analysis <- lapply(wave_decomp, analyze_wavelet_variance)"},{"path":"https://avishekb9.github.io/WaveQTE/articles/basic-usage.html","id":"quantile-transfer-entropy-analysis","dir":"Articles","previous_headings":"","what":"Quantile Transfer Entropy Analysis","title":"Getting Started with WaveQTE","text":"Calculate QTE different scales quantile levels:","code":"# Define parameters tau_levels <- c(0.1, 0.25, 0.5, 0.75, 0.9)  # Calculate multiscale QTE qte_results <- calculate_multiscale_qte(   wave_decomp[[1]],    wave_decomp[[2]],    tau_levels )  # Visualize results plot_qte_heatmap(qte_results)"},{"path":"https://avishekb9.github.io/WaveQTE/articles/basic-usage.html","id":"network-analysis","dir":"Articles","previous_headings":"","what":"Network Analysis","title":"Getting Started with WaveQTE","text":"Create analyze QTE-based networks:","code":"# Create network for a specific scale net <- create_qte_network(returns, wave_decomp, scale = 1, tau = 0.5)  # Calculate network metrics metrics <- calculate_network_metrics(net)  # Visualize network plot_enhanced_network(net, scale = 1, tau = 0.5)"},{"path":"https://avishekb9.github.io/WaveQTE/articles/basic-usage.html","id":"saving-results","dir":"Articles","previous_headings":"","what":"Saving Results","title":"Getting Started with WaveQTE","text":"Save analysis results later use:","code":"# Save results save_results(list(   qte = qte_results,   network = net,   metrics = metrics ), \"analysis_results.RData\")"},{"path":"https://avishekb9.github.io/WaveQTE/articles/basic-usage.html","id":"further-reading","dir":"Articles","previous_headings":"","what":"Further Reading","title":"Getting Started with WaveQTE","text":"advanced features, see: - Vignette: “Financial Contagion Analysis” - Vignette: “Advanced Features” - Package documentation: ?WaveQTE","code":""},{"path":"https://avishekb9.github.io/WaveQTE/articles/contagion-analysis.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Financial Contagion Analysis with WaveQTE","text":"vignette demonstrates analyze financial contagion using WaveQTE package.","code":""},{"path":"https://avishekb9.github.io/WaveQTE/articles/contagion-analysis.html","id":"market-data-setup","dir":"Articles","previous_headings":"","what":"Market Data Setup","title":"Financial Contagion Analysis with WaveQTE","text":"","code":"library(WaveQTE)  # Define market groups dm_symbols <- c(\"SPY\", \"EWU\", \"EWJ\", \"EWG\", \"EWQ\")  # Developed markets ETFs em_symbols <- c(\"EWZ\", \"FXI\", \"INDA\", \"EWY\", \"EIDO\") # Emerging markets ETFs  # Get and process data dm_returns <- get_stock_data(dm_symbols, \"2019-01-01\", \"2023-12-31\") em_returns <- get_stock_data(em_symbols, \"2019-01-01\", \"2023-12-31\")  dm_returns <- process_returns(dm_returns) em_returns <- process_returns(em_returns)"},{"path":"https://avishekb9.github.io/WaveQTE/articles/contagion-analysis.html","id":"wavelet-decomposition","dir":"Articles","previous_headings":"","what":"Wavelet Decomposition","title":"Financial Contagion Analysis with WaveQTE","text":"","code":"# Parameters params <- list(   n_levels = 4,   tau_levels = c(0.1, 0.25, 0.5, 0.75, 0.9),   wf = \"la8\" )  # Decompose developed market returns dm_wave <- lapply(1:ncol(dm_returns), function(i) {   wavelet_decompose(dm_returns[,i], n.levels = params$n_levels, wf = params$wf) })  # Decompose emerging market returns em_wave <- lapply(1:ncol(em_returns), function(i) {   wavelet_decompose(em_returns[,i], n.levels = params$n_levels, wf = params$wf) })"},{"path":"https://avishekb9.github.io/WaveQTE/articles/contagion-analysis.html","id":"contagion-analysis","dir":"Articles","previous_headings":"","what":"Contagion Analysis","title":"Financial Contagion Analysis with WaveQTE","text":"","code":"# Calculate contagion measures contagion_matrix <- calculate_contagion_index(dm_returns, em_returns) dci_results <- calculate_dynamic_contagion(dm_returns, em_returns)  # Plot results plot_contagion_network(contagion_matrix, dm_symbols, em_symbols) plot_contagion_heatmap(contagion_matrix, dm_symbols, em_symbols)"},{"path":"https://avishekb9.github.io/WaveQTE/articles/contagion-analysis.html","id":"crisis-period-analysis","dir":"Articles","previous_headings":"","what":"Crisis Period Analysis","title":"Financial Contagion Analysis with WaveQTE","text":"","code":"# Identify crisis periods crisis_periods <- identify_crisis_periods(cbind(dm_returns, em_returns))  # Analyze crisis vs non-crisis periods crisis_results <- crisis_analysis(dm_returns, em_returns, crisis_periods)  # Compare results plot_crisis_comparison(crisis_results)"},{"path":"https://avishekb9.github.io/WaveQTE/articles/contagion-analysis.html","id":"cross-market-correlation-analysis","dir":"Articles","previous_headings":"","what":"Cross-Market Correlation Analysis","title":"Financial Contagion Analysis with WaveQTE","text":"","code":"# Calculate rolling correlations correlations <- calculate_cross_market_correlation(   dm_returns,    em_returns,    window_size = 252 )  # Analyze correlation patterns plot_rolling_qte(correlations, window_size = 252)"},{"path":"https://avishekb9.github.io/WaveQTE/articles/contagion-analysis.html","id":"multiscale-analysis","dir":"Articles","previous_headings":"","what":"Multiscale Analysis","title":"Financial Contagion Analysis with WaveQTE","text":"","code":"# Calculate QTE at different scales for(scale in 1:params$n_levels) {   for(tau in params$tau_levels) {     cat(\"\\nScale:\", scale, \"Tau:\", tau, \"\\n\")          # Calculate and plot QTE networks     net <- create_qte_network(       cbind(dm_returns, em_returns),       c(dm_wave, em_wave),       scale = scale,       tau = tau     )          plot_enhanced_network(net, scale, tau)   } }"},{"path":"https://avishekb9.github.io/WaveQTE/articles/contagion-analysis.html","id":"saving-results","dir":"Articles","previous_headings":"","what":"Saving Results","title":"Financial Contagion Analysis with WaveQTE","text":"","code":"# Save analysis results save_results(list(   contagion = contagion_matrix,   dci = dci_results,   crisis = crisis_results,   correlations = correlations ), \"contagion_analysis.RData\")"},{"path":"https://avishekb9.github.io/WaveQTE/articles/contagion-analysis.html","id":"additional-resources","dir":"Articles","previous_headings":"","what":"Additional Resources","title":"Financial Contagion Analysis with WaveQTE","text":"information, see: - Package documentation: ?WaveQTE - Basic usage vignette: vignette(\"basic-usage\", package = \"WaveQTE\") - Advanced features vignette: vignette(\"advanced-features\", package = \"WaveQTE\")","code":""},{"path":"https://avishekb9.github.io/WaveQTE/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Avishek Bhandari. Author, maintainer.","code":""},{"path":"https://avishekb9.github.io/WaveQTE/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bhandari (2024). “Wavelet-based Quantile Transfer Entropy Analysis.” Working paper SP128.","code":"@Article{,   title = {Wavelet-based Quantile Transfer Entropy Analysis},   author = {Avishek Bhandari},   journal = {Working paper SP128},   year = {2024}, }"},{"path":"https://avishekb9.github.io/WaveQTE/index.html","id":"waveqte-","dir":"","previous_headings":"","what":"WaveQTE • Wavelet-based Quantile Transfer Entropy Analysis","title":"WaveQTE • Wavelet-based Quantile Transfer Entropy Analysis","text":"Wavelet-based Quantile Transfer Entropy Analysis Financial Time Series Advanced tools analyzing market interconnectedness, financial contagion, risk spillover effects across different time scales market conditions.","code":""},{"path":"https://avishekb9.github.io/WaveQTE/index.html","id":"-why-waveqte","dir":"","previous_headings":"","what":"🚀 Why WaveQTE?","title":"WaveQTE • Wavelet-based Quantile Transfer Entropy Analysis","text":"WaveQTE bridges gap theoretical finance practical analysis combining wavelet decomposition quantile transfer entropy reveal hidden patterns financial markets. Whether ’re researcher, practitioner, policymaker, WaveQTE provides tools need understand: 📊 Market Interconnectedness - markets influence across time scales 🌊 Financial Contagion - crises spread markets regions 📈 Risk Spillovers - Directional risk transmission patterns 🔗 Network Dynamics - Complex relationships financial systems","code":""},{"path":[]},{"path":"https://avishekb9.github.io/WaveQTE/index.html","id":"-multi-source-data-support","dir":"","previous_headings":"✨ Key Features","what":"📁 Multi-source Data Support","title":"WaveQTE • Wavelet-based Quantile Transfer Entropy Analysis","text":"Built-financial dataset 10 global market indices Yahoo Finance integration real-time data Custom data import capabilities Automated data quality checks","code":""},{"path":"https://avishekb9.github.io/WaveQTE/index.html","id":"️-wavelet-decomposition","dir":"","previous_headings":"✨ Key Features","what":"〰️ Wavelet Decomposition","title":"WaveQTE • Wavelet-based Quantile Transfer Entropy Analysis","text":"MODWT-based analysis across multiple time scales Robust handling non-stationary financial data Scale-specific analysis market dynamics Advanced variance decomposition","code":""},{"path":"https://avishekb9.github.io/WaveQTE/index.html","id":"-quantile-transfer-entropy","dir":"","previous_headings":"✨ Key Features","what":"📊 Quantile Transfer Entropy","title":"WaveQTE • Wavelet-based Quantile Transfer Entropy Analysis","text":"Information flow measurement across quantiles Tail-risk extreme event analysis Directional spillover detection Bootstrap significance testing","code":""},{"path":"https://avishekb9.github.io/WaveQTE/index.html","id":"️-network-analysis","dir":"","previous_headings":"✨ Key Features","what":"🕸️ Network Analysis","title":"WaveQTE • Wavelet-based Quantile Transfer Entropy Analysis","text":"QTE-based network construction Comprehensive network metrics Community detection algorithms Multi-scale network visualization","code":""},{"path":"https://avishekb9.github.io/WaveQTE/index.html","id":"-financial-contagion","dir":"","previous_headings":"✨ Key Features","what":"🌊 Financial Contagion","title":"WaveQTE • Wavelet-based Quantile Transfer Entropy Analysis","text":"Crisis period identification Cross-market correlation analysis Dynamic contagion measurement Regional spillover patterns","code":""},{"path":"https://avishekb9.github.io/WaveQTE/index.html","id":"-rich-visualizations","dir":"","previous_headings":"✨ Key Features","what":"📈 Rich Visualizations","title":"WaveQTE • Wavelet-based Quantile Transfer Entropy Analysis","text":"Interactive network plots Publication-ready heatmaps Time-varying analysis charts Customizable themes layouts","code":""},{"path":"https://avishekb9.github.io/WaveQTE/index.html","id":"-installation","dir":"","previous_headings":"","what":"📦 Installation","title":"WaveQTE • Wavelet-based Quantile Transfer Entropy Analysis","text":"Dependencies: WaveQTE automatically installs required packages including quantmod, waveslim, quantreg, igraph, ggplot2, others.","code":"# Install from GitHub (recommended) if (!require(\"devtools\")) install.packages(\"devtools\") devtools::install_github(\"avishekb9/WaveQTE\")  # Load the package library(WaveQTE)"},{"path":[]},{"path":"https://avishekb9.github.io/WaveQTE/index.html","id":"1️⃣-load-data","dir":"","previous_headings":"🚀 Quick Start","what":"1️⃣ Load Data","title":"WaveQTE • Wavelet-based Quantile Transfer Entropy Analysis","text":"","code":"# Use built-in dataset (recommended for testing) data <- get_stock_data(data_source = \"builtin\",                         indices = c(\"GSPC\", \"N225\", \"FTSE\"))  # Or fetch live data from Yahoo Finance # data <- get_stock_data(c(\"AAPL\", \"MSFT\", \"JPM\"),  #                        start_date = \"2020-01-01\",  #                        end_date = \"2023-12-31\")"},{"path":"https://avishekb9.github.io/WaveQTE/index.html","id":"2️⃣-process-returns","dir":"","previous_headings":"🚀 Quick Start","what":"2️⃣ Process Returns","title":"WaveQTE • Wavelet-based Quantile Transfer Entropy Analysis","text":"","code":"processed_data <- process_returns(data) summary_stats <- calculate_summary_stats(processed_data) print_summary_stats(summary_stats)"},{"path":"https://avishekb9.github.io/WaveQTE/index.html","id":"3️⃣-wavelet-decomposition","dir":"","previous_headings":"🚀 Quick Start","what":"3️⃣ Wavelet Decomposition","title":"WaveQTE • Wavelet-based Quantile Transfer Entropy Analysis","text":"","code":"# Decompose time series into multiple scales wave_decomp <- lapply(1:ncol(processed_data), function(i) {   wavelet_decompose(as.numeric(processed_data[1:256, i]), n.levels = 4) })  # Analyze variance contributions across scales var_analysis <- lapply(wave_decomp, analyze_wavelet_variance) print_wavelet_summary(wave_decomp[[1]])"},{"path":"https://avishekb9.github.io/WaveQTE/index.html","id":"4️⃣-quantile-transfer-entropy","dir":"","previous_headings":"🚀 Quick Start","what":"4️⃣ Quantile Transfer Entropy","title":"WaveQTE • Wavelet-based Quantile Transfer Entropy Analysis","text":"","code":"# Calculate multiscale QTE tau_levels <- c(0.1, 0.25, 0.5, 0.75, 0.9) qte_results <- calculate_multiscale_qte(   wave_decomp[[1]],    wave_decomp[[2]],    tau_levels )  # Calculate multiscale QTE across quantiles tau_levels <- c(0.1, 0.25, 0.5, 0.75, 0.9) qte_results <- calculate_multiscale_qte(   wave_decomp[[1]], wave_decomp[[2]], tau_levels )  # Create beautiful heatmap visualization plot_qte_heatmap(qte_results, title = \"Multiscale QTE Analysis\")"},{"path":"https://avishekb9.github.io/WaveQTE/index.html","id":"5️⃣-network-analysis","dir":"","previous_headings":"🚀 Quick Start","what":"5️⃣ Network Analysis","title":"WaveQTE • Wavelet-based Quantile Transfer Entropy Analysis","text":"","code":"# Build QTE-based financial network network <- create_qte_network(processed_data[1:256, ],                               wave_decomp, scale = 1, tau = 0.5)  # Compute comprehensive network metrics metrics <- calculate_network_metrics(network) print(paste(\"Network density:\", round(metrics$density, 3)))  # Create interactive network visualization plot_enhanced_network(network, scale = 1, tau = 0.5)"},{"path":"https://avishekb9.github.io/WaveQTE/index.html","id":"6️⃣-financial-contagion-analysis","dir":"","previous_headings":"🚀 Quick Start","what":"6️⃣ Financial Contagion Analysis","title":"WaveQTE • Wavelet-based Quantile Transfer Entropy Analysis","text":"","code":"# Analyze contagion between developed and emerging markets dm_data <- get_stock_data(data_source = \"builtin\",                            indices = c(\"GSPC\", \"N225\", \"FTSE\")) em_data <- get_stock_data(data_source = \"builtin\",                            indices = c(\"SSE\", \"BSE\", \"HSI\"))  # Measure contagion effects contagion_results <- calculate_contagion_index(dm_data[1:256, ],                                                em_data[1:256, ])  # Identify crisis periods automatically crisis_periods <- identify_crisis_periods(cbind(dm_data, em_data))"},{"path":[]},{"path":"https://avishekb9.github.io/WaveQTE/index.html","id":"-comprehensive-vignettes","dir":"","previous_headings":"📚 Learning Resources","what":"📖 Comprehensive Vignettes","title":"WaveQTE • Wavelet-based Quantile Transfer Entropy Analysis","text":"Basic Usage - Get started core functionality Advanced Features - Explore sophisticated analysis techniques Contagion Analysis - Specialized crisis spillover analysis","code":""},{"path":"https://avishekb9.github.io/WaveQTE/index.html","id":"-data-sources","dir":"","previous_headings":"📚 Learning Resources","what":"📊 Data Sources","title":"WaveQTE • Wavelet-based Quantile Transfer Entropy Analysis","text":"WaveQTE supports multiple data sources maximum flexibility:","code":"# Examples of different data sources builtin_data <- get_stock_data(data_source = \"builtin\") yahoo_data <- get_stock_data(c(\"AAPL\", \"GOOGL\"), \"2020-01-01\", \"2023-12-31\") custom_data <- get_stock_data(data_source = \"file\", file_path = \"my_data.csv\")"},{"path":[]},{"path":"https://avishekb9.github.io/WaveQTE/index.html","id":"️-academic-research","dir":"","previous_headings":"🎯 Use Cases","what":"🏛️ Academic Research","title":"WaveQTE • Wavelet-based Quantile Transfer Entropy Analysis","text":"Publish-ready analysis finance journals Robust statistical methods bootstrap testing Comprehensive documentation references","code":""},{"path":"https://avishekb9.github.io/WaveQTE/index.html","id":"-risk-management","dir":"","previous_headings":"🎯 Use Cases","what":"🏢 Risk Management","title":"WaveQTE • Wavelet-based Quantile Transfer Entropy Analysis","text":"Real-time spillover monitoring Crisis early warning systems Portfolio diversification analysis","code":""},{"path":"https://avishekb9.github.io/WaveQTE/index.html","id":"-policy-analysis","dir":"","previous_headings":"🎯 Use Cases","what":"📊 Policy Analysis","title":"WaveQTE • Wavelet-based Quantile Transfer Entropy Analysis","text":"Systemic risk assessment Financial stability monitoring Cross-border contagion analysis","code":""},{"path":"https://avishekb9.github.io/WaveQTE/index.html","id":"-investment-strategy","dir":"","previous_headings":"🎯 Use Cases","what":"💼 Investment Strategy","title":"WaveQTE • Wavelet-based Quantile Transfer Entropy Analysis","text":"Market interconnectedness insights Timing allocation decisions Risk-adjusted portfolio construction","code":""},{"path":"https://avishekb9.github.io/WaveQTE/index.html","id":"️-package-architecture","dir":"","previous_headings":"","what":"🏗️ Package Architecture","title":"WaveQTE • Wavelet-based Quantile Transfer Entropy Analysis","text":"","code":"WaveQTE/ ├── 📁 R/                          # Core functionality │   ├── 🔧 data_preparation.R       # Data import & processing │   ├── 〰️ wavelet_decomposition.R # Multi-scale analysis │   ├── 📊 quantile_transfer_entropy.R # QTE calculations │   ├── 🕸️ network_analysis.R       # Network construction │   ├── 🌊 contagion_analysis.R     # Crisis analysis │   ├── 📈 visualization.R          # Rich visualizations │   └── 🛠️ utils.R                 # Helper functions ├── 📚 vignettes/                   # Comprehensive tutorials ├── 🧪 tests/                       # Extensive test suite └── 📖 man/                         # Complete documentation"},{"path":[]},{"path":"https://avishekb9.github.io/WaveQTE/index.html","id":"-performance--quality","dir":"","previous_headings":"","what":"📈 Performance & Quality","title":"WaveQTE • Wavelet-based Quantile Transfer Entropy Analysis","text":"✅ 109 passing tests comprehensive coverage ✅ CRAN-compliant package structure ✅ Optimized algorithms large datasets ✅ Bootstrap validation statistical robustness ✅ Extensive documentation real-world examples","code":""},{"path":"https://avishekb9.github.io/WaveQTE/index.html","id":"-contributing","dir":"","previous_headings":"","what":"🤝 Contributing","title":"WaveQTE • Wavelet-based Quantile Transfer Entropy Analysis","text":"welcome contributions! Whether ’re fixing bugs, adding features, improving documentation: 🍴 Fork repository 🌱 Create feature branch ✨ Make changes 🧪 Run tests (devtools::test()) 📝 Submit pull request See CONTRIBUTING.md detailed guidelines.","code":""},{"path":"https://avishekb9.github.io/WaveQTE/index.html","id":"-license","dir":"","previous_headings":"","what":"📄 License","title":"WaveQTE • Wavelet-based Quantile Transfer Entropy Analysis","text":"project licensed MIT License - see LICENSE file details.","code":""},{"path":"https://avishekb9.github.io/WaveQTE/index.html","id":"-citation","dir":"","previous_headings":"","what":"📚 Citation","title":"WaveQTE • Wavelet-based Quantile Transfer Entropy Analysis","text":"use WaveQTE research, please cite:","code":"@misc{WaveQTE2024,   author = {Avishek Bhandari},   title = {WaveQTE: Wavelet-based Quantile Transfer Entropy Analysis for Financial Time Series},   year = {2024},   publisher = {GitHub},   url = {https://github.com/avishekb9/WaveQTE},   note = {R package version 0.1.0} }"},{"path":"https://avishekb9.github.io/WaveQTE/index.html","id":"-support--community","dir":"","previous_headings":"","what":"💬 Support & Community","title":"WaveQTE • Wavelet-based Quantile Transfer Entropy Analysis","text":"🐛 Issues: GitHub Issues 📧 Contact: bavisek@gmail.com 📖 Documentation: Package Website","code":""},{"path":"https://avishekb9.github.io/WaveQTE/index.html","id":"-acknowledgments","dir":"","previous_headings":"","what":"🙏 Acknowledgments","title":"WaveQTE • Wavelet-based Quantile Transfer Entropy Analysis","text":"WaveQTE built shoulders giants: R Core Team - R statistical computing environment waveslim package - Wavelet analysis functionality igraph package - Network analysis capabilities ggplot2 package - Beautiful flexible visualizations quantmod package - Financial data integration ⭐ Star repository WaveQTE helps research! ⭐ Get Started • Documentation • Examples • GitHub","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/WaveQTE-package.html","id":null,"dir":"Reference","previous_headings":"","what":"WaveQTE: Wavelet-based Quantile Transfer Entropy Analysis — WaveQTE-package","title":"WaveQTE: Wavelet-based Quantile Transfer Entropy Analysis — WaveQTE-package","text":"Implements Wavelet-based Quantile Transfer Entropy analysis financial time series. Provides tools analyzing market interconnectedness, financial contagion, risk spillover effects across different time scales market conditions.","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/WaveQTE-package.html","id":"main-functions","dir":"Reference","previous_headings":"","what":"Main Functions","title":"WaveQTE: Wavelet-based Quantile Transfer Entropy Analysis — WaveQTE-package","text":"Data Preparation: get_stock_data, process_returns, calculate_summary_stats Wavelet Analysis: wavelet_decompose, safe_wavelet_decompose, analyze_wavelet_variance Quantile Transfer Entropy: calculate_qte, calculate_multiscale_qte, bootstrap_qte Network Analysis: create_qte_network, calculate_network_metrics, create_multiscale_networks Visualization: plot_enhanced_network, plot_qte_heatmap, plot_market_strength","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/WaveQTE-package.html","id":"data-requirements","dir":"Reference","previous_headings":"","what":"Data Requirements","title":"WaveQTE: Wavelet-based Quantile Transfer Entropy Analysis — WaveQTE-package","text":"package works financial time series data. main input : Return series (preferably daily) Clean data without missing values Sufficient length wavelet decomposition","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/WaveQTE-package.html","id":"usage-example","dir":"Reference","previous_headings":"","what":"Usage Example","title":"WaveQTE: Wavelet-based Quantile Transfer Entropy Analysis — WaveQTE-package","text":"","code":"library(WaveQTE)  # Get data data <- get_stock_data(c(\"AAPL\", \"MSFT\"), \"2019-01-01\", \"2023-12-31\")  # Wavelet decomposition wave <- lapply(1:ncol(data), function(i) wavelet_decompose(data[,i]))  # Calculate QTE qte <- calculate_multiscale_qte(wave[[1]], wave[[2]], c(0.1, 0.5, 0.9))  # Create network net <- create_qte_network(data, wave, scale = 1)  # Visualize plot_enhanced_network(net, scale = 1, tau = 0.5)"},{"path":"https://avishekb9.github.io/WaveQTE/reference/WaveQTE-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"WaveQTE: Wavelet-based Quantile Transfer Entropy Analysis — WaveQTE-package","text":"Add relevant papers references .","code":""},{"path":[]},{"path":"https://avishekb9.github.io/WaveQTE/reference/WaveQTE-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"WaveQTE: Wavelet-based Quantile Transfer Entropy Analysis — WaveQTE-package","text":"Maintainer: Avishek Bhandari bavisek@gmail.com","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/analyze_wavelet_variance.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze Wavelet Variance — analyze_wavelet_variance","title":"Analyze Wavelet Variance — analyze_wavelet_variance","text":"Analyze Wavelet Variance","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/analyze_wavelet_variance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze Wavelet Variance — analyze_wavelet_variance","text":"","code":"analyze_wavelet_variance(wave_decomp)"},{"path":"https://avishekb9.github.io/WaveQTE/reference/analyze_wavelet_variance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze Wavelet Variance — analyze_wavelet_variance","text":"wave_decomp Wavelet decomposition list wavelet_decompose","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/analyze_wavelet_variance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze Wavelet Variance — analyze_wavelet_variance","text":"List containing variance decomposition percentage contributions","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/analyze_wavelet_variance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze Wavelet Variance — analyze_wavelet_variance","text":"","code":"if (FALSE) { # \\dontrun{ data <- rnorm(256) wave <- wavelet_decompose(data) var_analysis <- analyze_wavelet_variance(wave) } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/bootstrap_qte.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap QTE Confidence Intervals — bootstrap_qte","title":"Bootstrap QTE Confidence Intervals — bootstrap_qte","text":"Bootstrap QTE Confidence Intervals","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/bootstrap_qte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap QTE Confidence Intervals — bootstrap_qte","text":"","code":"bootstrap_qte(x, y, tau = 0.5, B = 1000, block_size = 20, conf_level = 0.95)"},{"path":"https://avishekb9.github.io/WaveQTE/reference/bootstrap_qte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap QTE Confidence Intervals — bootstrap_qte","text":"x Source time series y Target time series tau Quantile level B Number bootstrap replications block_size Block size block bootstrap conf_level Confidence level intervals","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/bootstrap_qte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap QTE Confidence Intervals — bootstrap_qte","text":"List containing bootstrap samples confidence intervals","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/bootstrap_qte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap QTE Confidence Intervals — bootstrap_qte","text":"","code":"if (FALSE) { # \\dontrun{ x <- rnorm(100) y <- 0.5 * x + rnorm(100, sd = 0.1) boot_results <- bootstrap_qte(x, y, tau = 0.5, B = 1000) } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_contagion_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Contagion Index — calculate_contagion_index","title":"Calculate Contagion Index — calculate_contagion_index","text":"Calculate Contagion Index","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_contagion_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Contagion Index — calculate_contagion_index","text":"","code":"calculate_contagion_index(returns_dm, returns_em, tau = 0.05, n.levels = 4)"},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_contagion_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Contagion Index — calculate_contagion_index","text":"returns_dm Matrix developed market returns returns_em Matrix emerging market returns tau Quantile level (default: 0.05) n.levels Number wavelet levels (default: 4)","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_contagion_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Contagion Index — calculate_contagion_index","text":"Array containing contagion measures","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_contagion_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Contagion Index — calculate_contagion_index","text":"","code":"if (FALSE) { # \\dontrun{ dm_returns <- get_stock_data(c(\"SPY\", \"EWU\")) em_returns <- get_stock_data(c(\"EWZ\", \"FXI\")) contagion <- calculate_contagion_index(dm_returns, em_returns) } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_cross_market_correlation.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Cross-Market Correlation — calculate_cross_market_correlation","title":"Calculate Cross-Market Correlation — calculate_cross_market_correlation","text":"Calculate Cross-Market Correlation","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_cross_market_correlation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Cross-Market Correlation — calculate_cross_market_correlation","text":"","code":"calculate_cross_market_correlation(returns_dm, returns_em, window_size = 252)"},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_cross_market_correlation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Cross-Market Correlation — calculate_cross_market_correlation","text":"returns_dm Developed market returns returns_em Emerging market returns window_size Rolling window size (default: 252)","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_cross_market_correlation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Cross-Market Correlation — calculate_cross_market_correlation","text":"Array rolling correlations","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_cross_market_correlation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Cross-Market Correlation — calculate_cross_market_correlation","text":"","code":"if (FALSE) { # \\dontrun{ dm_returns <- get_stock_data(c(\"SPY\", \"EWU\")) em_returns <- get_stock_data(c(\"EWZ\", \"FXI\")) correlations <- calculate_cross_market_correlation(dm_returns, em_returns) } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_dynamic_contagion.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Dynamic Contagion Index — calculate_dynamic_contagion","title":"Calculate Dynamic Contagion Index — calculate_dynamic_contagion","text":"Calculate Dynamic Contagion Index","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_dynamic_contagion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Dynamic Contagion Index — calculate_dynamic_contagion","text":"","code":"calculate_dynamic_contagion(   returns_dm,   returns_em,   window_size = 252,   tau = 0.05 )"},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_dynamic_contagion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Dynamic Contagion Index — calculate_dynamic_contagion","text":"returns_dm Matrix developed market returns returns_em Matrix emerging market returns window_size Rolling window size (default: 252) tau Quantile level (default: 0.05)","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_dynamic_contagion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Dynamic Contagion Index — calculate_dynamic_contagion","text":"Matrix dynamic contagion indices","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_dynamic_contagion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Dynamic Contagion Index — calculate_dynamic_contagion","text":"","code":"if (FALSE) { # \\dontrun{ dm_returns <- get_stock_data(c(\"SPY\", \"EWU\")) em_returns <- get_stock_data(c(\"EWZ\", \"FXI\")) dci <- calculate_dynamic_contagion(dm_returns, em_returns) } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_multiscale_qte.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Multiscale QTE — calculate_multiscale_qte","title":"Calculate Multiscale QTE — calculate_multiscale_qte","text":"Calculate Multiscale QTE","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_multiscale_qte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Multiscale QTE — calculate_multiscale_qte","text":"","code":"calculate_multiscale_qte(wave_x, wave_y, tau_levels)"},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_multiscale_qte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Multiscale QTE — calculate_multiscale_qte","text":"wave_x Wavelet decomposition source series wave_y Wavelet decomposition target series tau_levels Vector quantile levels","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_multiscale_qte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Multiscale QTE — calculate_multiscale_qte","text":"Matrix QTE values scale quantile","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_multiscale_qte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Multiscale QTE — calculate_multiscale_qte","text":"","code":"if (FALSE) { # \\dontrun{ # Generate test data x <- rnorm(256) y <- 0.5 * x + rnorm(256, sd = 0.1)  # Perform wavelet decomposition wave_x <- wavelet_decompose(x) wave_y <- wavelet_decompose(y)  # Calculate multiscale QTE qte_results <- calculate_multiscale_qte(wave_x, wave_y, c(0.1, 0.5, 0.9)) } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_network_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Network Metrics — calculate_network_metrics","title":"Calculate Network Metrics — calculate_network_metrics","text":"Calculate Network Metrics","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_network_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Network Metrics — calculate_network_metrics","text":"","code":"calculate_network_metrics(network)"},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_network_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Network Metrics — calculate_network_metrics","text":"network Network object create_qte_network","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_network_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Network Metrics — calculate_network_metrics","text":"List network metrics","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_network_metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Network Metrics — calculate_network_metrics","text":"","code":"if (FALSE) { # \\dontrun{ data <- matrix(rnorm(300), ncol = 3) wave <- lapply(1:ncol(data), function(i) wavelet_decompose(data[,i])) net <- create_qte_network(data, wave, scale = 1) metrics <- calculate_network_metrics(net) } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_qte.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Quantile Transfer Entropy — calculate_qte","title":"Calculate Quantile Transfer Entropy — calculate_qte","text":"Calculate Quantile Transfer Entropy","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_qte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Quantile Transfer Entropy — calculate_qte","text":"","code":"calculate_qte(x, y, tau = 0.5, k = 1)"},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_qte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Quantile Transfer Entropy — calculate_qte","text":"x Source time series y Target time series tau Quantile level (default: 0.5) k Lag order (default: 1)","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_qte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Quantile Transfer Entropy — calculate_qte","text":"Numeric QTE value NA calculation fails","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_qte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Quantile Transfer Entropy — calculate_qte","text":"","code":"if (FALSE) { # \\dontrun{ x <- rnorm(100) y <- 0.5 * x + rnorm(100, sd = 0.1) qte <- calculate_qte(x, y, tau = 0.5) } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_rolling_qte.html","id":null,"dir":"Reference","previous_headings":"","what":"Rolling Window QTE Analysis — calculate_rolling_qte","title":"Rolling Window QTE Analysis — calculate_rolling_qte","text":"Rolling Window QTE Analysis","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_rolling_qte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rolling Window QTE Analysis — calculate_rolling_qte","text":"","code":"calculate_rolling_qte(x, y, window_size, tau = 0.5, step_size = 1)"},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_rolling_qte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rolling Window QTE Analysis — calculate_rolling_qte","text":"x Source time series y Target time series window_size Window size rolling analysis tau Quantile level step_size Step size rolling window (default: 1)","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_rolling_qte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rolling Window QTE Analysis — calculate_rolling_qte","text":"Vector QTE values window","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_rolling_qte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rolling Window QTE Analysis — calculate_rolling_qte","text":"","code":"if (FALSE) { # \\dontrun{ x <- rnorm(500) y <- 0.5 * x + rnorm(500, sd = 0.1) rolling_qte <- calculate_rolling_qte(x, y, window_size = 100) } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_summary_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Summary Statistics — calculate_summary_stats","title":"Calculate Summary Statistics — calculate_summary_stats","text":"Calculate Summary Statistics","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_summary_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Summary Statistics — calculate_summary_stats","text":"","code":"calculate_summary_stats(returns)"},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_summary_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Summary Statistics — calculate_summary_stats","text":"returns xts object containing return data","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_summary_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Summary Statistics — calculate_summary_stats","text":"List statistics","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/calculate_summary_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Summary Statistics — calculate_summary_stats","text":"","code":"if (FALSE) { # \\dontrun{ data <- get_stock_data(\"AAPL\") stats <- calculate_summary_stats(data) } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/check_data_quality.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Data Quality — check_data_quality","title":"Check Data Quality — check_data_quality","text":"Check Data Quality","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/check_data_quality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Data Quality — check_data_quality","text":"","code":"check_data_quality(market_data, crisis_periods = NULL)"},{"path":"https://avishekb9.github.io/WaveQTE/reference/check_data_quality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Data Quality — check_data_quality","text":"market_data List market data crisis_periods List crisis period dates (optional)","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/check_data_quality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Data Quality — check_data_quality","text":"NULL (prints diagnostics)","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/check_data_quality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Data Quality — check_data_quality","text":"","code":"if (FALSE) { # \\dontrun{ data <- list(developed = get_stock_data(\"AAPL\")) crisis_periods <- list(covid = c(\"2020-01-01\", \"2020-12-31\")) check_data_quality(data, crisis_periods) } # } if (FALSE) { # \\dontrun{ # Using built-in dataset data <- get_stock_data(data_source = \"builtin\") processed_data <- process_returns(data) head(processed_data) } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/check_dependencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Package Dependencies — check_dependencies","title":"Check Package Dependencies — check_dependencies","text":"Check Package Dependencies","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/check_dependencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Package Dependencies — check_dependencies","text":"","code":"check_dependencies()"},{"path":"https://avishekb9.github.io/WaveQTE/reference/check_dependencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Package Dependencies — check_dependencies","text":"Character vector missing packages","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/check_dependencies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Package Dependencies — check_dependencies","text":"","code":"missing_deps <- check_dependencies()"},{"path":"https://avishekb9.github.io/WaveQTE/reference/contagion_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Financial Contagion Analysis Functions — contagion_analysis","title":"Financial Contagion Analysis Functions — contagion_analysis","text":"Functions analyzing financial contagion market spillovers","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/create_multiscale_networks.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Multiscale Networks — create_multiscale_networks","title":"Create Multiscale Networks — create_multiscale_networks","text":"Create Multiscale Networks","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/create_multiscale_networks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Multiscale Networks — create_multiscale_networks","text":"","code":"create_multiscale_networks(returns, wave_decomp, params)"},{"path":"https://avishekb9.github.io/WaveQTE/reference/create_multiscale_networks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Multiscale Networks — create_multiscale_networks","text":"returns Return data matrix wave_decomp Wavelet decomposition list params List n_levels tau_levels","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/create_multiscale_networks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Multiscale Networks — create_multiscale_networks","text":"List networks metrics","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/create_multiscale_networks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Multiscale Networks — create_multiscale_networks","text":"","code":"if (FALSE) { # \\dontrun{ data <- matrix(rnorm(300), ncol = 3) wave <- lapply(1:ncol(data), function(i) wavelet_decompose(data[,i])) params <- list(n_levels = 4, tau_levels = c(0.1, 0.5, 0.9)) networks <- create_multiscale_networks(data, wave, params) } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/create_qte_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Create QTE Network — create_qte_network","title":"Create QTE Network — create_qte_network","text":"Create QTE Network","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/create_qte_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create QTE Network — create_qte_network","text":"","code":"create_qte_network(returns, wave_decomp, scale, tau = 0.5)"},{"path":"https://avishekb9.github.io/WaveQTE/reference/create_qte_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create QTE Network — create_qte_network","text":"returns Return data matrix wave_decomp List wavelet decompositions scale Scale level analyze tau Quantile level (default: 0.5)","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/create_qte_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create QTE Network — create_qte_network","text":"List containing network objects QTE matrix","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/create_qte_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create QTE Network — create_qte_network","text":"","code":"if (FALSE) { # \\dontrun{ data <- matrix(rnorm(300), ncol = 3) wave <- lapply(1:ncol(data), function(i) wavelet_decompose(data[,i])) net <- create_qte_network(data, wave, scale = 1) } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/crisis_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze Crisis vs Non-Crisis Periods — crisis_analysis","title":"Analyze Crisis vs Non-Crisis Periods — crisis_analysis","text":"Analyze Crisis vs Non-Crisis Periods","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/crisis_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze Crisis vs Non-Crisis Periods — crisis_analysis","text":"","code":"crisis_analysis(returns_dm, returns_em, crisis_periods)"},{"path":"https://avishekb9.github.io/WaveQTE/reference/crisis_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze Crisis vs Non-Crisis Periods — crisis_analysis","text":"returns_dm Developed market returns returns_em Emerging market returns crisis_periods Logical vector indicating crisis periods","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/crisis_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze Crisis vs Non-Crisis Periods — crisis_analysis","text":"List containing contagion measures crisis normal periods","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/crisis_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze Crisis vs Non-Crisis Periods — crisis_analysis","text":"","code":"if (FALSE) { # \\dontrun{ dm_returns <- get_stock_data(c(\"SPY\", \"EWU\")) em_returns <- get_stock_data(c(\"EWZ\", \"FXI\")) crisis_periods <- identify_crisis_periods(cbind(dm_returns, em_returns)) analysis <- crisis_analysis(dm_returns, em_returns, crisis_periods) } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/data_preparation.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Preparation Functions — data_preparation","title":"Data Preparation Functions — data_preparation","text":"Functions data import processing","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/get_stock_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Stock Market Data — get_stock_data","title":"Get Stock Market Data — get_stock_data","text":"Get Stock Market Data","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/get_stock_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Stock Market Data — get_stock_data","text":"","code":"get_stock_data(   symbols = NULL,   start_date = \"2007-01-01\",   end_date = \"2023-12-31\",   data_source = \"yahoo\",   file_path = NULL,   custom_data = NULL,   date_col = \"Date\",   indices = NULL,   return_prices = FALSE )"},{"path":"https://avishekb9.github.io/WaveQTE/reference/get_stock_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Stock Market Data — get_stock_data","text":"symbols Character vector stock symbols (used fetching Yahoo Finance) start_date Start date data retrieval (YYYY-MM-DD) end_date End date data retrieval (YYYY-MM-DD) data_source Source data. Options: \"yahoo\" (default): Fetch Yahoo Finance \"builtin\": Use built-market indices dataset \"file\": Load local CSV file (specify file_path) \"custom\": Use pre-loaded data frame (specify custom_data) file_path Path local CSV file data_source=\"file\" custom_data data frame data_source=\"custom\" date_col Name date column (default: \"Date\") indices Character vector columns retrieve. NULL (default), returns available columns. return_prices Logical, whether return prices instead returns (default: FALSE)","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/get_stock_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Stock Market Data — get_stock_data","text":"xts object containing log returns prices","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/get_stock_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Stock Market Data — get_stock_data","text":"","code":"# Method 1: Using built-in dataset data <- get_stock_data(data_source = \"builtin\") #> Warning: cannot open URL 'https://raw.githubusercontent.com/avishekb9/WaveQTE/master/market_indices.csv': HTTP status was '404 Not Found' #> Error in value[[3L]](cond): Could not download built-in dataset. Please check your internet connection. head(data) #>                                                                              #> 1 function (..., list = character(), package = NULL, lib.loc = NULL,         #> 2     verbose = getOption(\"verbose\"), envir = .GlobalEnv, overwrite = TRUE)  #> 3 {                                                                          #> 4     fileExt <- function(x) {                                               #> 5         db <- grepl(\"\\\\\\\\.[^.]+\\\\\\\\.(gz|bz2|xz)$\", x)                      #> 6         ans <- sub(\".*\\\\\\\\.\", \"\", x)                                        # Method 2: Using built-in dataset with selected indices developed_markets <- get_stock_data(data_source = \"builtin\",                                    indices = c(\"GSPC\", \"N225\", \"FTSE\")) #> Warning: cannot open URL 'https://raw.githubusercontent.com/avishekb9/WaveQTE/master/market_indices.csv': HTTP status was '404 Not Found' #> Error in value[[3L]](cond): Could not download built-in dataset. Please check your internet connection. head(developed_markets) #> Error: object 'developed_markets' not found  # Method 3: Using a local CSV file if (FALSE) { # \\dontrun{   data <- get_stock_data(data_source = \"file\",                          file_path = \"path/to/your/data.csv\")   head(data) } # }  # Method 4: Using a pre-loaded custom data frame if (FALSE) { # \\dontrun{   my_data <- read.csv(\"my_stocks.csv\")   data <- get_stock_data(data_source = \"custom\",                          custom_data = my_data,                         date_col = \"MyDateColumn\")   head(data) } # }  # Method 5: Fetch data from Yahoo Finance (requires internet) if (FALSE) { # \\dontrun{   data <- get_stock_data(c(\"AAPL\", \"MSFT\"),                          start_date = \"2020-01-01\",                          end_date = \"2020-12-31\")   head(data) } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/identify_crisis_periods.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify Crisis Periods — identify_crisis_periods","title":"Identify Crisis Periods — identify_crisis_periods","text":"Identify Crisis Periods","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/identify_crisis_periods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify Crisis Periods — identify_crisis_periods","text":"","code":"identify_crisis_periods(returns, threshold = -2)"},{"path":"https://avishekb9.github.io/WaveQTE/reference/identify_crisis_periods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify Crisis Periods — identify_crisis_periods","text":"returns Return data matrix threshold Threshold crisis identification (default: -2)","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/identify_crisis_periods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify Crisis Periods — identify_crisis_periods","text":"Logical vector indicating crisis periods","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/identify_crisis_periods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify Crisis Periods — identify_crisis_periods","text":"","code":"if (FALSE) { # \\dontrun{ data <- get_stock_data(c(\"SPY\", \"EWZ\")) crisis_periods <- identify_crisis_periods(data) } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/load_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Analysis Results — load_results","title":"Load Analysis Results — load_results","text":"Load Analysis Results","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/load_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Analysis Results — load_results","text":"","code":"load_results(file_path)"},{"path":"https://avishekb9.github.io/WaveQTE/reference/load_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Analysis Results — load_results","text":"file_path Path saved results","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/load_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Analysis Results — load_results","text":"List analysis results","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/load_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Analysis Results — load_results","text":"","code":"if (FALSE) { # \\dontrun{ results <- load_results(\"analysis_results.RData\") } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/market_indices.html","id":null,"dir":"Reference","previous_headings":"","what":"Historical Global Market Indices Closing Prices — market_indices","title":"Historical Global Market Indices Closing Prices — market_indices","text":"dataset containing daily closing prices 10 global market indices 2015-05-22 onwards.","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/market_indices.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Historical Global Market Indices Closing Prices — market_indices","text":"dataframe following columns: Date Date YYYY-MM-DD format GSPC S&P 500 Index (USA) N225 Nikkei 225 (Japan) FTSE FTSE 100 (UK) FCHI CAC 40 (France) GDAXI DAX (Germany) SSE Shanghai Composite (China) BSE BSE SENSEX (India) HSI Hang Seng Index (Hong Kong) TWII Taiwan Weighted Index (Taiwan) MOEX MOEX Russia Index (Russia)","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/market_indices.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Historical Global Market Indices Closing Prices — market_indices","text":"Global market data","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/market_indices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Historical Global Market Indices Closing Prices — market_indices","text":"","code":"if (FALSE) { # \\dontrun{ # Load the data directly from GitHub data_url <- \"https://raw.githubusercontent.com/avishekb9/WaveQTE/main/market_indices.csv\" market_data <- read.csv(data_url) head(market_data) } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/network_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Network Analysis Functions — network_analysis","title":"Network Analysis Functions — network_analysis","text":"Functions network construction analysis","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/plot_enhanced_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Enhanced Network — plot_enhanced_network","title":"Plot Enhanced Network — plot_enhanced_network","text":"Plot Enhanced Network","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/plot_enhanced_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Enhanced Network — plot_enhanced_network","text":"","code":"plot_enhanced_network(network, scale, tau)"},{"path":"https://avishekb9.github.io/WaveQTE/reference/plot_enhanced_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Enhanced Network — plot_enhanced_network","text":"network Network object scale Scale level tau Quantile level","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/plot_enhanced_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Enhanced Network — plot_enhanced_network","text":"ggplot object","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/plot_enhanced_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Enhanced Network — plot_enhanced_network","text":"","code":"if (FALSE) { # \\dontrun{ net <- create_qte_network(returns, wave_decomp, scale = 1) plot_enhanced_network(net, scale = 1, tau = 0.5) } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/plot_market_strength.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Market Strength — plot_market_strength","title":"Plot Market Strength — plot_market_strength","text":"Plot Market Strength","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/plot_market_strength.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Market Strength — plot_market_strength","text":"","code":"plot_market_strength(network, scale, tau)"},{"path":"https://avishekb9.github.io/WaveQTE/reference/plot_market_strength.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Market Strength — plot_market_strength","text":"network Network object scale Scale level tau Quantile level","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/plot_market_strength.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Market Strength — plot_market_strength","text":"ggplot object","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/plot_market_strength.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Market Strength — plot_market_strength","text":"","code":"if (FALSE) { # \\dontrun{ net <- create_qte_network(returns, wave_decomp, scale = 1) plot_market_strength(net, scale = 1, tau = 0.5) } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/plot_qte_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot QTE Heatmap — plot_qte_heatmap","title":"Plot QTE Heatmap — plot_qte_heatmap","text":"Plot QTE Heatmap","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/plot_qte_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot QTE Heatmap — plot_qte_heatmap","text":"","code":"plot_qte_heatmap(qte_matrix, title = \"Multiscale QTE Analysis\")"},{"path":"https://avishekb9.github.io/WaveQTE/reference/plot_qte_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot QTE Heatmap — plot_qte_heatmap","text":"qte_matrix QTE results matrix title Plot title","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/plot_qte_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot QTE Heatmap — plot_qte_heatmap","text":"ggplot object","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/plot_qte_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot QTE Heatmap — plot_qte_heatmap","text":"","code":"if (FALSE) { # \\dontrun{ qte_results <- calculate_multiscale_qte(wave_x, wave_y, tau_levels) plot_qte_heatmap(qte_results) } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/plot_rolling_qte.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Rolling QTE — plot_rolling_qte","title":"Plot Rolling QTE — plot_rolling_qte","text":"Plot Rolling QTE","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/plot_rolling_qte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Rolling QTE — plot_rolling_qte","text":"","code":"plot_rolling_qte(rolling_qte, window_size)"},{"path":"https://avishekb9.github.io/WaveQTE/reference/plot_rolling_qte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Rolling QTE — plot_rolling_qte","text":"rolling_qte Rolling QTE results window_size Window size used","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/plot_rolling_qte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Rolling QTE — plot_rolling_qte","text":"ggplot object","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/plot_rolling_qte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Rolling QTE — plot_rolling_qte","text":"","code":"if (FALSE) { # \\dontrun{ rolling_results <- calculate_rolling_qte(x, y, window_size = 100) plot_rolling_qte(rolling_results, window_size = 100) } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/plot_spillover_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Spillover Heatmap — plot_spillover_heatmap","title":"Plot Spillover Heatmap — plot_spillover_heatmap","text":"Plot Spillover Heatmap","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/plot_spillover_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Spillover Heatmap — plot_spillover_heatmap","text":"","code":"plot_spillover_heatmap(spillover_matrix, title = \"Spillover Analysis\")"},{"path":"https://avishekb9.github.io/WaveQTE/reference/plot_spillover_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Spillover Heatmap — plot_spillover_heatmap","text":"spillover_matrix Matrix spillover values title Plot title","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/plot_spillover_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Spillover Heatmap — plot_spillover_heatmap","text":"ggplot object","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/plot_spillover_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Spillover Heatmap — plot_spillover_heatmap","text":"","code":"if (FALSE) { # \\dontrun{ spillover_plot <- plot_spillover_heatmap(spillover_matrix) } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/print_summary_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Summary Statistics — print_summary_stats","title":"Print Summary Statistics — print_summary_stats","text":"Print Summary Statistics","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/print_summary_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Summary Statistics — print_summary_stats","text":"","code":"print_summary_stats(stats)"},{"path":"https://avishekb9.github.io/WaveQTE/reference/print_summary_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Summary Statistics — print_summary_stats","text":"stats Summary statistics object","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/print_summary_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Summary Statistics — print_summary_stats","text":"Invisible NULL","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/print_summary_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Summary Statistics — print_summary_stats","text":"","code":"if (FALSE) { # \\dontrun{ stats <- calculate_summary_stats(returns) print_summary_stats(stats) } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/print_wavelet_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Wavelet Decomposition Summary — print_wavelet_summary","title":"Print Wavelet Decomposition Summary — print_wavelet_summary","text":"Print Wavelet Decomposition Summary","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/print_wavelet_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Wavelet Decomposition Summary — print_wavelet_summary","text":"","code":"print_wavelet_summary(wave_decomp)"},{"path":"https://avishekb9.github.io/WaveQTE/reference/print_wavelet_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Wavelet Decomposition Summary — print_wavelet_summary","text":"wave_decomp Wavelet decomposition object","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/print_wavelet_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Wavelet Decomposition Summary — print_wavelet_summary","text":"Invisible NULL","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/print_wavelet_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Wavelet Decomposition Summary — print_wavelet_summary","text":"","code":"if (FALSE) { # \\dontrun{ data <- rnorm(256) wave <- wavelet_decompose(data) print_wavelet_summary(wave) } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/process_returns.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Returns Data — process_returns","title":"Process Returns Data — process_returns","text":"Process Returns Data","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/process_returns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Returns Data — process_returns","text":"","code":"process_returns(returns)"},{"path":"https://avishekb9.github.io/WaveQTE/reference/process_returns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Returns Data — process_returns","text":"returns xts object containing return data","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/process_returns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Returns Data — process_returns","text":"Processed xts object","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/process_returns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process Returns Data — process_returns","text":"","code":"if (FALSE) { # \\dontrun{ data <- get_stock_data(\"AAPL\") processed_data <- process_returns(data) } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/quantile_transfer_entropy.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantile Transfer Entropy Functions — quantile_transfer_entropy","title":"Quantile Transfer Entropy Functions — quantile_transfer_entropy","text":"Functions calculating Quantile Transfer Entropy","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/safe_wavelet_decompose.html","id":null,"dir":"Reference","previous_headings":"","what":"Safe Wavelet Decomposition — safe_wavelet_decompose","title":"Safe Wavelet Decomposition — safe_wavelet_decompose","text":"Safe Wavelet Decomposition","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/safe_wavelet_decompose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safe Wavelet Decomposition — safe_wavelet_decompose","text":"","code":"safe_wavelet_decompose(returns, n.levels = 4, wf = \"la8\")"},{"path":"https://avishekb9.github.io/WaveQTE/reference/safe_wavelet_decompose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safe Wavelet Decomposition — safe_wavelet_decompose","text":"returns Numeric vector return data n.levels Number wavelet decomposition levels (default: 4) wf Wavelet filter use (default: \"la8\")","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/safe_wavelet_decompose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safe Wavelet Decomposition — safe_wavelet_decompose","text":"List containing wavelet decomposition results","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/safe_wavelet_decompose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Safe Wavelet Decomposition — safe_wavelet_decompose","text":"","code":"if (FALSE) { # \\dontrun{ data <- rnorm(256) wave <- safe_wavelet_decompose(data) } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/save_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Plot to File — save_plot","title":"Save Plot to File — save_plot","text":"Save Plot File","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/save_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Plot to File — save_plot","text":"","code":"save_plot(plot, filename, width = 10, height = 8, dpi = 300)"},{"path":"https://avishekb9.github.io/WaveQTE/reference/save_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Plot to File — save_plot","text":"plot ggplot object filename Output filename width Plot width inches height Plot height inches dpi Resolution dots per inch","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/save_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Plot to File — save_plot","text":"Invisible NULL","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/save_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Plot to File — save_plot","text":"","code":"if (FALSE) { # \\dontrun{ p <- plot_qte_heatmap(qte_results) save_plot(p, \"heatmap.png\") } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/save_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Analysis Results — save_results","title":"Save Analysis Results — save_results","text":"Save Analysis Results","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/save_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Analysis Results — save_results","text":"","code":"save_results(results, file_path)"},{"path":"https://avishekb9.github.io/WaveQTE/reference/save_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Analysis Results — save_results","text":"results List analysis results file_path File path saving","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/save_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Analysis Results — save_results","text":"Invisible NULL","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/save_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Analysis Results — save_results","text":"","code":"if (FALSE) { # \\dontrun{ save_results(list(qte = qte_results), \"analysis_results.RData\") } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/test_qte_significance.html","id":null,"dir":"Reference","previous_headings":"","what":"Test QTE Significance — test_qte_significance","title":"Test QTE Significance — test_qte_significance","text":"Test QTE Significance","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/test_qte_significance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test QTE Significance — test_qte_significance","text":"","code":"test_qte_significance(x, y, tau = 0.5, n_permutations = 1000)"},{"path":"https://avishekb9.github.io/WaveQTE/reference/test_qte_significance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test QTE Significance — test_qte_significance","text":"x Source time series y Target time series tau Quantile level n_permutations Number permutations test","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/test_qte_significance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test QTE Significance — test_qte_significance","text":"List containing test statistics p-value","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/test_qte_significance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test QTE Significance — test_qte_significance","text":"","code":"if (FALSE) { # \\dontrun{ x <- rnorm(100) y <- 0.5 * x + rnorm(100, sd = 0.1) test_result <- test_qte_significance(x, y) } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/utils.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility Functions — utils","title":"Utility Functions — utils","text":"Helper functions package","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/visualization.html","id":null,"dir":"Reference","previous_headings":"","what":"Network Visualization Functions — visualization","title":"Network Visualization Functions — visualization","text":"Functions visualizing network analysis results","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/wavelet_decompose.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Wavelet Decomposition — wavelet_decompose","title":"Perform Wavelet Decomposition — wavelet_decompose","text":"Perform Wavelet Decomposition","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/wavelet_decompose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Wavelet Decomposition — wavelet_decompose","text":"","code":"wavelet_decompose(returns, n.levels = 4, wf = \"la8\")"},{"path":"https://avishekb9.github.io/WaveQTE/reference/wavelet_decompose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Wavelet Decomposition — wavelet_decompose","text":"returns Numeric vector return data n.levels Number wavelet decomposition levels (default: 4) wf Wavelet filter use (default: \"la8\")","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/wavelet_decompose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Wavelet Decomposition — wavelet_decompose","text":"List containing wavelet decomposition results","code":""},{"path":"https://avishekb9.github.io/WaveQTE/reference/wavelet_decompose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Wavelet Decomposition — wavelet_decompose","text":"","code":"if (FALSE) { # \\dontrun{ data <- rnorm(256) wave <- wavelet_decompose(data, n.levels = 4) } # }"},{"path":"https://avishekb9.github.io/WaveQTE/reference/wavelet_decomposition.html","id":null,"dir":"Reference","previous_headings":"","what":"Wavelet Decomposition Functions — wavelet_decomposition","title":"Wavelet Decomposition Functions — wavelet_decomposition","text":"Functions performing wavelet decomposition analysis","code":""},{"path":[]},{"path":[]},{"path":"https://avishekb9.github.io/WaveQTE/news/index.html","id":"major-features-0-1-0","dir":"Changelog","previous_headings":"Initial Release","what":"Major Features","title":"WaveQTE 0.1.0","text":"Data preparation processing functions Wavelet decomposition implementation Quantile Transfer Entropy calculations Network analysis tools Visualization functions","code":""},{"path":"https://avishekb9.github.io/WaveQTE/news/index.html","id":"key-functions-0-1-0","dir":"Changelog","previous_headings":"Initial Release","what":"Key Functions","title":"WaveQTE 0.1.0","text":"get_stock_data() data retrieval wavelet_decompose() wavelet analysis calculate_qte() transfer entropy create_qte_network() network construction Various visualization functions","code":""},{"path":"https://avishekb9.github.io/WaveQTE/news/index.html","id":"documentation-0-1-0","dir":"Changelog","previous_headings":"Initial Release","what":"Documentation","title":"WaveQTE 0.1.0","text":"Added comprehensive vignettes Complete function documentation Usage examples Unit tests","code":""},{"path":"https://avishekb9.github.io/WaveQTE/news/index.html","id":"dependencies-0-1-0","dir":"Changelog","previous_headings":"Initial Release","what":"Dependencies","title":"WaveQTE 0.1.0","text":"Optimized package dependencies Moved optional packages Suggests Added proper imports","code":""}]
